# Default values for fcu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# FCU_name image_name configmap_string cpu_mem_info
# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1


publishServer: 
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    name: tiexiang.io/fcu-if/publish-server:v1.0.5
    repository: ""
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

fcuServer:
  image:
    name: tiexiang.io/dapeng/fcu-image-1729909396545:v1.0
    repository: ""
    pullPolicy: IfNotPresent
    tag: ""
  
  imagePullSecrets: []

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
    # gpu: "1"
  requests:
    cpu: 10m
    memory: 10Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe: {}
#   httpGet:
#     path: /
#     port: http
# readinessProbe: {}
#   httpGet:
#     path: /
#     port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

# bcsu调度到中心,fcu调度到边缘
# 边缘只允许fcu调动，其他服务不允许调动到边缘
# node-role.kubernetes.io/center-node
# 边缘节点添加不可调度污点，fcu上添加该污点容忍
# node-role.kubernetes.io/edge-node
tolerations: 
  - key: "tiexiang.io/edge-node"  
    operator: "Equal"  
    effect: "NoSchedule"  

# 根据fcu所属的车站，将fcu调度到车站所属的节点上
# affinity: 
  # nodeAffinity:  
  #   requiredDuringSchedulingIgnoredDuringExecution:  
  #     nodeSelectorTerms:  
  #       - matchExpressions:  
  #           - key: "tiexiang.io/edge-node"  
  #             operator: In  
  #             values:  
  #               - "true"        
  #           - key: "tiexiang.io/station-code"  
  #             operator: In  
  #             values:  
  #               - "nanningju"
#             - key: "tiexiang.io/company-code"  
#               operator: In  
#               values:  
#                 - "tiexiang"

persistentVolumeClaim:
  data: 
    enabled: false
#     storage: 10Gi
#   log: 
#     enabled: true
#     storage: 10Gi
  # claimName: 


configMap:
  data: |
    {
      "Scene": {
          "CompanyCode": "NanNingJu",
          "StationCode": "NanNingZhan",
          "SceneClass": "KaiKuoDi",
          "BCSUNum": "123"
      },
      "Device": {
          "Manufacturer": "GXTieXiang",
          "ScopeClass": "XianJie",
          "DeviceClass": "Radar_Videos",
          "LineCode": "543342",
          "FCUNum": "123"
      },
      "Level2Seconds": {
          "0": 12000,
          "1": 600,
          "2": 300,
          "3": 180,
          "4": 60,
          "5": 30,
          "6": 10
      },
      "MQTTClient": {
          "Host": "",
          "Port": "",
          "Username": "",
          "Password": "",
          "CertFile": "",
          "DebugFile": "log/mqtt_debug.txt"
      },
      "MinioClient": {
          "Endpoint": "",
          "AccessKey": "",
          "SecretKey": "",
          "secure": "False",
          "CertCheck": "False",
          "ExpirationLevel": "2",
          "ExpirationDays": "7",
          "DebugFile": "log/minio_debug.txt"
      },
      "RPCServer": {
          "IP": "127.0.0.1",
          "Port": "9999"
      },
      "Logger": {
          "LogDir": "log",
          "Level": "INFO"
      },
      "Sensors": {
          "videos": [
              {
              "EquipmentID": "video1",
              "IP": "192.168.1.10",
              "Port": 8000
              },
              {
              "EquipmentID": "video2",
              "IP": "192.168.1.20",
              "Port": 8000
              }
          ],
          "radars": [
              {
              "EquipmentID": "radar1",
              "IP": "192.168.1.11",
              "Port": 8001
              }
          ]
      }
    }
  CameraSet.json: |
      {
        "ca4": {
            "rtsp_url": "rtsp://admin:Tiexiang@192.168.1.65:554/h264/ch1/main/av_stream",
            "intrusion_detection_enabled": true,
            "save_full_image_enabled": true,
            "save_object_crop_enabled": true,
            "detection_areas": [
                {
                    "type": "fence",
                    "points": [
                      [
                        1239,
                        663
                    ],
                    [
                        1948,
                        603
                    ],
                    [
                        2022,
                        741
                    ],
                    [
                        1273,
                        804
                    ]
                    ]
                }
            ],
            "first_stage": {
                "model": "yolo_stage1n",
                "iou": 0.5,
                "confidence": 0.5,
                "selected_classes": [
                    "person",
                    "smog",
                    "flame"
                ]
            },
            "second_stage": {
                "model": "yolo_stage2n",
                "iou": 0.3,
                "confidence": 0.4,
                "selected_classes": [
                    "helmet",
                    "vest",
                    "smoking",
                    "phone"
                ]
            }
        }
    }
