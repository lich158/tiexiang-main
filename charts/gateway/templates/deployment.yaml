apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gateway.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                SERVICES="{{ .Values.probe.servicesName }}"
                NAMESPACE_ID="{{ .Values.probe.nacosID }}"
                NACOS_URL="{{ .Values.probe.nacosUrl }}"

                for service in ${SERVICES}; do
                  if ! curl -sS -k "${NACOS_URL}?serviceName=${service}&namespaceId=${NAMESPACE_ID}" | grep -q "\"name\":\"${service}\""; then
                    echo "Service ${service} not found in Nacos!"
                    exit 1
                  fi
                done
            failureThreshold: {{ .Values.failureThreshold }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
            successThreshold: {{ .Values.successThreshold }}
            timeoutSeconds: {{ .Values.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                SERVICES="{{ .Values.probe.servicesName }}"
                NAMESPACE_ID="{{ .Values.probe.nacosID }}"
                NACOS_URL="{{ .Values.probe.nacosUrl }}"

                for service in ${SERVICES}; do
                  if ! curl -sS -k "${NACOS_URL}?serviceName=${service}&namespaceId=${NAMESPACE_ID}" | grep -q "\"name\":\"${service}\""; then
                    echo "Service ${service} not found in Nacos!"
                    exit 1
                  fi
                done
            failureThreshold: {{ .Values.failureThreshold }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
            successThreshold: {{ .Values.successThreshold }}
            timeoutSeconds: {{ .Values.timeoutSeconds }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NACOS_GROUP
              value: {{ .Values.nacos.group | quote }}
            - name: NACOS_NAMESPACE
              value: {{ .Values.nacos.namespace | quote }}
            - name: NACOS_SERVER_ADDR
              value: {{ .Values.nacos.server | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

