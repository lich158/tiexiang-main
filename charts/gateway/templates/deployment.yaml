apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gateway.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: create-db
          image: "{{ .Values.initimage.repository }}:{{ .Values.initimage.tag }}"
          imagePullPolicy: {{ .Values.initimage.pullPolicy }}
          command: ["python3", "/app/create-db.py"]
          volumeMounts:
            - name: {{ .Values.configMapName }}
              mountPath: /app/config  # 容器中的路径
          env:
            - name: DATABASES
              value: {{ .Values.mysql.databases | quote }}  
        - name: gateway-cns
          image: "{{ .Values.initimage.repository }}:{{ .Values.initimage.tag }}"
          imagePullPolicy: {{ .Values.initimage.pullPolicy }}
          command: ["python3", "/app/gateway-cns.py"]
          volumeMounts:
            - name: {{ .Values.configMapName }}
              mountPath: /app/config  # 容器中的路径
          env:
            - name: DATA_ID
              value: {{ .Values.nacos.dataId | quote }}
            - name: APP_NAME
              value: {{ .Values.nacos.appName  | quote }}
            - name: SERVER_PORT
              value: {{ .Values.nacos.appPort | quote }}
            - name: NACOS_GROUP
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMapName }}
                  key: NACOS_GROUP
            - name: NACOS_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configMapName }}
                  key: NACOS_NAMESPACE
        - name: emqx-api
          image: "{{ .Values.initimage.repository }}:{{ .Values.initimage.tag }}"
          imagePullPolicy: {{ .Values.initimage.pullPolicy }}
          command: ["python3", "/app/emqx-api.py"]
          volumeMounts:
            - name: {{ .Values.configMapName }}
              mountPath: /app/config  # 容器中的路径
          env:
            - name: EMQX_USER_ID
              value: {{ .Values.emqx.username | quote }}  
            - name: EMQX_PASSWORD
              value: {{ .Values.emqx.password | quote }}  
            - name: EMQX_PTOPIC
              value: {{ .Values.emqx.ptopic | quote }}  
            - name: EMQX_STOPIC
              value: {{ .Values.emqx.stopic | quote }}  
            - name: EMQX_ATOPIC
              value: {{ .Values.emqx.atopic | quote }}  
            - name: EMQX_PPERMISSION
              value: {{ .Values.emqx.ppermission | quote }}  
            - name: EMQX_SPERMISSION
              value: {{ .Values.emqx.spermission | quote }} 
            - name: EMQX_APERMISSION
              value: {{ .Values.emqx.apermission | quote }} 
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["java", "-Dfile.encoding=utf-8", "-jar", "/app/tx-gateway.jar"]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Values.configMapName }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.configMapName }}
          configMap:
            name: {{ .Values.configMapName }}

