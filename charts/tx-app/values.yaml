# Default values for qiantangweb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: tx-pile-foundation-web
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: http
  type: ClusterIP
  port: 80
  ports: []
  # 示例：
  # ports:
  #   - name: http
  #     port: 80
  #     targetPort: http
  #     protocol: TCP
  #   - name: metrics
  #     port: 8080
  #     targetPort: metrics
  #     protocol: TCP  

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: qiantang.gxtxkj.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 10Mi

livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: data
#   persistentVolumeClaim:
#     claimName: data

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: data
#   mountPath: /app/data

nodeSelector: {}

tolerations: []

affinity: {}

imageSecret: 
  enabled: true
  dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5neHR4a2ouY29tIjp7InVzZXJuYW1lIjoidHgtYXBwbGljYXRpb24iLCJwYXNzd29yZCI6ImdsZHQtRFFmcG5jWWhka1VhZ2N6Zy1zckEiLCJhdXRoIjoiZEhndFlYQndiR2xqWVhScGIyNDZaMnhrZEMxRVVXWndibU5aYUdSclZXRm5ZM3BuTFhOeVFRPT0ifX19

configmap:
  enabled: false
  
  